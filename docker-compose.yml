networks:
  monitoring:
    driver: bridge
volumes:
  prometheus_data: {}
  grafana_data: {}
  postgres_data: {}

services:
  backend:
    build: ./backend
    container_name: django_app
    volumes:
      - ./backend:/app
      - ./media:/app/media
      - ./static:/app/static
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DATABASE_URL=postgres://myuser:mypassword@db:5432/mydb
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: frontend_app
    ports:
      - "3000:3000"

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.45.2
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    networks:
      - monitoring
    restart: always

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.0
    container_name: nginx-prometheus-exporter
    command:
      - -nginx.scrape-uri=http://nginx:80/stub_status
    networks:
      - monitoring
    depends_on:
      - prometheus
    restart: always

  grafana:
    image: grafana/grafana:10.0.10
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=your_secure_password
    ports:
      - 3001:3000
    networks:
      - monitoring
    depends_on:
      - prometheus
    restart: always
